一、用户登录
    前台：
        表单：
            姓名文本框、密码文本框
        通过ajax请求，实现登录功能
            传递参数：用户名、用户密码

    后台：
        整体思路：
            1. 接收参数
            2. 参数校验
                用户名称 非空
                用户密码 非空
            3. 通过用户名查询用户对象，返回用户对象
            4. 判断用户对象是否为空
                如果为空 登录失败
            5. 如果用户对象不为空，则比较前台传递的密码与数据库中用户对象查询到的密码
                如果不一致，登录失败
                如果一致，登录成功

        分层思想：
            Controller层 （控制层）
                1. 接收参数 （方法形参绑定参数）
                2. 调用Service层的方法，返回User对象
                3. 返回ResultInfo （通过@ResponseBody注解设置）

            Service层 （业务逻辑层）
                1. 参数校验
                    判断用户名或密码是否为空，如果为空则抛出异常 （用户名称或密码不能为空！）
                2. 调用Dao层的方法，通过用户名查询用户对象，返回用户对象
                3. 判断用户对象是否为空
                    如果为空，则抛出异常 （该用户不存在！）
                4. 将前台传递的密码，通过MD5算法加密
                5. 将加密后的密码与数据库中查询用户对象中的密码作比较
                    如果密码不相等，则抛出异常 （用户密码不正确！）
                6. 返回User对象

            Dao层 （数据访问层）
                接口方法：通过用户名查询用户对象，返回用户对象



二、修改密码
    前台：
        原始密码、新密码、重复密码

    后台：
        Controller层：
            1. 通过形参接收前台传递的参数
            2. 通过工具类，从cookie中获取当前登录用户的ID
            3. 调用Service层，执行修改密码操作
            4. 如果捕获到异常则设置失败的状态码和提示信息，否则响应成功
        Service层：
            1. 判断用户ID是否为空
            2. 调用Dao层，通过用户ID查询用户对象
            3. 判断用户对象是否为空
            4. 判断原始密码是否为空
            5. 判断原始密码是否正确
            6. 判断新密码是否为空
            7. 判断新密码是否与原始密码相同
            8. 判断重复密码是否为空
            9. 判断重复密码是否与新密码相等
            10. 执行更新操作，判断受影响的行数
         Dao层：
            不需要写